# Generated by Django 5.2.1 on 2025-05-26 17:33

import django.core.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SecurityEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.SmallIntegerField(choices=[(1, 'Login'), (2, 'Trade'), (3, 'Dispute'), (4, 'Admin')])),
                ('actor_token', models.CharField(blank=True, help_text='HMAC-SHA256(actor_identity)', max_length=64, null=True)),
                ('ip_hmac', models.CharField(blank=True, help_text='HMAC-SHA256(ip_address)', max_length=64, null=True)),
                ('details_enc', models.TextField(blank=True, help_text='Age-encrypted details', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'indexes': [models.Index(fields=['event_type'], name='idx_event_type'), models.Index(fields=['actor_token'], name='idx_event_actor'), models.Index(fields=['created_at'], name='idx_event_timestamp')],
            },
        ),
        migrations.CreateModel(
            name='AnonymousUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('exchange_code', models.CharField(editable=False, help_text='Public identifier (EX-1234)', max_length=8, unique=True)),
                ('password_hash', models.CharField(editable=False, max_length=255)),
                ('session_salt', models.CharField(editable=False, max_length=32)),
                ('client_token', models.CharField(editable=False, help_text='SHA3-256(salt + password_hash)', max_length=64, unique=True)),
                ('last_active', models.DateTimeField(blank=True, null=True)),
                ('trust_score', models.SmallIntegerField(default=100, help_text='0-100 reputation score', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'indexes': [models.Index(fields=['exchange_code'], name='idx_user_exchange_code'), models.Index(fields=['client_token'], name='idx_user_client_token')],
            },
        ),
    ]
